/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/fortnite/stats/{username}/{platform}/{timeWindow}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Fortnite stats.
         * @description Retrieve Fortnite stats for a player.
         */
        get: operations["fortniteGetStats"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @description Object returned to any query that fails with an error code that expects a body (400, 409, ...) */
        ErrorResponse: {
            /**
             * @description Error Code
             * @example 400
             */
            code: number;
            /**
             * @description Descriptive error message
             * @example user must be logged in to make the request
             */
            message: string;
            /**
             * @description The name of the field/param that caused the error
             * @example id
             */
            field?: string;
            /**
             * @description Location of where the field/param was found
             * @example body
             * @enum {string}
             */
            location?: "query" | "path" | "body" | "header" | "cookie";
        };
        /** @description represents the actual stats of a Fortnite player. */
        FortniteStatsDetails: {
            /**
             * @description Total score of the player.
             * @example 4595929
             */
            score: number;
            /**
             * Format: double
             * @description Average score per minute played.
             * @example 15.699
             */
            scorePerMin: number;
            /**
             * Format: double
             * @description Average score per match played.
             * @example 217.446
             */
            scorePerMatch: number;
            /**
             * Format: double
             * @description Total amount of enemies killed.
             * @example 77833
             */
            kills: number;
            /**
             * Format: double
             * @description Average of enemies killed per minute.
             * @example 0.256
             */
            killsPerMin: number;
            /**
             * Format: double
             * @description Average of enemies killed per match.
             * @example 3.682
             */
            killsPerMatch: number;
            /**
             * @description Total amount of time the player died.
             * @example 18361
             */
            deaths: number;
            /**
             * Format: double
             * @description kill/Death ratio.
             * @example 4.239
             */
            kd: number;
            /**
             * @description Total amount of matches played.
             * @example 21136
             */
            matches: number;
            /**
             * Format: double
             * @description How often the player wins, in %.
             * @example 13.129
             */
            winRate: number;
            /**
             * @description Total amount of minutes played.
             * @example 292752
             */
            minutesPlayed: number;
            /**
             * @description Total amount of players outlived.
             * @example 659524
             */
            playersOutlived: number;
            /**
             * @description Last time the player's stats were modified.
             * @example 2025-05-10T00:56:28Z
             */
            lastModified: string;
            /**
             * @description Total amount of victory royales.
             * @example 2775
             */
            wins: number;
            /**
             * @description Total amount of top 3 placements.
             * @example 1401
             */
            top3?: number;
            /**
             * @description Total amount of top 5 placements.
             * @example 1187
             */
            top5?: number;
            /**
             * @description Total amount of top 6 placements.
             * @example 1885
             */
            top6?: number;
            /**
             * @description Total amount of top 10 placements.
             * @example 958
             */
            top10?: number;
            /**
             * @description Total amount of top 12 placements.
             * @example 1787
             */
            top12?: number;
            /**
             * @description Total amount of top 25 placements.
             * @example 1673
             */
            top25?: number;
        };
        /** @description The categories holding stats. */
        FortniteStatsCategories: {
            overall: components["schemas"]["FortniteStatsDetails"];
            solo?: components["schemas"]["FortniteStatsDetails"];
            duo?: components["schemas"]["FortniteStatsDetails"];
            squad?: components["schemas"]["FortniteStatsDetails"];
            ltm?: components["schemas"]["FortniteStatsDetails"];
        };
        /** @description The content of the Stats endpoint. */
        FortniteStats: {
            /**
             * @description HTTP Status of the response
             * @example 200
             */
            status: number;
            /** @description Data of the response */
            data: {
                /** @description information about the player's account */
                account: {
                    /**
                     * @description ID of the account
                     * @example 883abec4cded42f3bea87531ce0aa5c8
                     */
                    id: string;
                    /**
                     * @description Name of the account
                     * @example M8 NÃ®kof
                     */
                    name: string;
                };
                /** @description information about the player's battle pass */
                battlePass: {
                    /**
                     * @description Current level of the player
                     * @example 43
                     */
                    level: number;
                    /**
                     * @description Progress in % toward the next level
                     * @example 51
                     */
                    progress: number;
                };
                /** @description information about the player's battle pass */
                stats: {
                    all: components["schemas"]["FortniteStatsCategories"];
                    keyboardMouse?: components["schemas"]["FortniteStatsCategories"];
                    gamepad?: components["schemas"]["FortniteStatsCategories"];
                    touch?: components["schemas"]["FortniteStatsCategories"];
                };
            };
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type ErrorResponse = components['schemas']['ErrorResponse'];
export type FortniteStatsDetails = components['schemas']['FortniteStatsDetails'];
export type FortniteStatsCategories = components['schemas']['FortniteStatsCategories'];
export type FortniteStats = components['schemas']['FortniteStats'];
export type $defs = Record<string, never>;
export interface operations {
    fortniteGetStats: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The username of the player */
                username: string;
                /** @description The platform the player plays on. */
                platform: "epic" | "xbl" | "psn";
                /** @description Time window of the stats. Current season or lifetime. */
                timeWindow: "season" | "lifetime";
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully retrieved a list of post */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FortniteStats"];
                };
            };
            /** @description The path/body/query/header contains missing or invalid data */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Cannot find the player on the given platform */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
            /** @description Something wrong happened */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
}
