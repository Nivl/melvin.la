name: api

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

permissions:
  contents: read

defaults:
  run:
    working-directory: api

# Don't run more than one workflow for the same branch at a time
# This is to save credits on the CI provider
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
   PROD_IMAGE_URI: registry.fly.io/melvinla-api-prod

jobs:
  perpare-env:
    name: detect what files changed
    runs-on: ubuntu-latest
    container:
      # replace with variable https://github.com/actions/runner/issues/1182
      image: ghcr.io/nivl/melvin.la-go-service-image-dev:sha-ef3636d
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.github_token }}
    outputs:
      code-changed: ${{ steps.changes.outputs.src }}
    steps:
      - uses: actions/checkout@v4
      - run: git config --global --add safe.directory /__w/melvin.la/melvin.la

      - name: Restore Cache
        id: restore-cache
        uses: './.github/actions/go-restore-cache'
        with:
          project-name: api

      - name: Update Cache
        uses: './.github/actions/go-update-cache'
        with:
          project-name: api
          cache-key: ${{ steps.restore-cache.outputs.cache-key }}
          is-cache-hit: ${{ steps.restore-cache.outputs.is-cache-hit }}

      - name: Check for file changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          token: ${{ github.token }}
          filters: |
            src:
              - 'api/**/*.go'
              - 'api/Taskfile_CI.yml'
              - 'api/go.sum'
              - 'api/go.mod'
              - 'api/Dockerfile'
              - '.github/workflows/api.yml'
              - '.github/actions/go-*/*.yml'

  build:
    if: needs.perpare-env.outputs.code-changed == 'true'
    needs: [perpare-env]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/nivl/melvin.la-go-service-image-dev:sha-ef3636d
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.github_token }}

    steps:
      - uses: actions/checkout@v4
      - name: Setup
        uses: './.github/actions/go-restore-cache'
        with:
          project-name: api

      - run: task ci:build

      - name: Save binary
        uses: actions/upload-artifact@v4
        with:
          name: api
          path: ./api/bin/api
          if-no-files-found: error

  lint:
    if: needs.perpare-env.outputs.code-changed == 'true'
    needs: [perpare-env]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/nivl/melvin.la-go-service-image-dev:sha-ef3636d
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.github_token }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup
        uses: './.github/actions/go-restore-cache'
        with:
          project-name: api
      - run: task ci:lint

  test-code:
    if: needs.perpare-env.outputs.code-changed == 'true'
    needs: [perpare-env]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/nivl/melvin.la-go-service-image-dev:sha-ef3636d
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.github_token }}

    steps:
      - uses: actions/checkout@v4
      - name: Setup
        uses: './.github/actions/go-restore-cache'
        with:
          project-name: api

      - name: Test
        run: task ci:test RESULTS_DIR=/tmp/test-results

      - name: Annotate tests
        if: success() || failure()
        uses: Nivl/golang-test-annotations@ml/proper-annotation
        with:
          test-results: /tmp/test-results/results.json
          working-directory: api

  build-image:
    if: |
      always() &&
      needs.perpare-env.outputs.code-changed == 'true' &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    name: Build docker image
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      contents: read
      packages: read

    steps:
      - uses: actions/checkout@v4

      - name: Restore Binary
        uses: actions/download-artifact@v4
        with:
          name: api
          path: ./api/bin

      - name: Buid Image
        uses: docker/build-push-action@v6
        with:
          context: ./api
          push: false

  publish-image:
    if: |
      always() &&
      github.event_name == 'push' && github.ref == 'refs/heads/main' &&
      needs.perpare-env.outputs.code-changed == 'true' &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    name: Build and Publish image to registry
    runs-on: ubuntu-latest
    needs:
      - build
      - lint
      - test-code
      - build-image
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Restore Binary
        uses: actions/download-artifact@v4
        with:
          name: api
          path: ./api/bin

      - name: Install flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Login to the Registry
        run: flyctl auth docker
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.PROD_IMAGE_URI }}
          tags: |
            type=sha
            type=raw,value=latest

      - name: Buid Image, tag it, and push to Github Container Registry
        uses: docker/build-push-action@v6
        with:
          context: ./api
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-to-prod:
    if: |
      always() &&
      github.event_name == 'push' && github.ref == 'refs/heads/main' &&
      needs.perpare-env.outputs.code-changed == 'true' &&
      !contains(needs.*.result, 'failure') &&
      !contains(needs.*.result, 'cancelled')
    name: Deploy to prod
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/nivl/melvin.la-go-service-image-dev:sha-ef3636d
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.github_token }}
    needs:
      - publish-image
    steps:
      - uses: actions/checkout@v4

      - name: Install flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy
        run: flyctl deploy --image ${{ env.PROD_IMAGE_URI }}:latest --config ./fly.toml
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        timeout-minutes: 5

  # This job is what github action will check to see if a PR is ready to
  # be merged.
  api-required-check:
    needs:
      [
        perpare-env,
        build,
        lint,
        test-code,
        build-image,
      ]
    # This is necessary since a failed/skipped dependent job would cause this job to be skipped
    if: always()
    runs-on: ubuntu-latest
    steps:
      # If any jobs we depend on fail, we will fail since this is a required check
      # NOTE: A timeout is considered a failure
      - name: Check for failures
        if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
        run: |
          echo "One of the dependent jobs have failed. You may need to re-run it." && exit 1
